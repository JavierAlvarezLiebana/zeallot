% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/name-structure.R
\name{.}
\alias{.}
\title{Name Structure}
\usage{
.(...)
}
\arguments{
\item{\ldots}{Bare variable names.}
}
\value{
The return value of \code{.} is a list structure with \ldots evaluated such
that bare names coerced to character strings and further calls to \code{.}
are evaluated.
}
\description{
The \code{.} function is used to build the left-hand side of a parallel or
unpacking assignment expression.
}
\details{
\code{.} allows bare variable names which may or may not yet exist. By
nesting calls to \code{.} on the left-hand side of the assignment expression
one can unpack nested values on the right-hand side.

Use \code{..} to skip assignment of a value.
}
\examples{
# nothing too extraordinary
.(a, b)

.(a, .(c, d), b)

# now with a little more extra-
.(a, b) \%<-\% list(0, 1)

a  # 0
b  # 1

# tackle a heavily nested list ...
fibs \%<-\% list(0, list(1, list(1, list(2, list(3)))))

# ... with an equally heavily nested
# name structure
.(f0, .(f1, .(f2, .(f3, .(f4))))) \%<-\% fibs

f1  # 1
f3  # 2
f4  # note that f4 is list(3)

# unpack only the first element
.(f0, fcdr) \%<-\% fibs

f0    # 0
fcdr  # list(1, list(1, list(2, list(3))))

# unpack first name, skip middle initial,
# get last name
.(first, .., last) \%<-\% list('Ursula', 'K', 'Le Guin')

first  # "Ursula"
last   # "Le Guin"

exists('..', inherits = FALSE)  # FALSE

}
\seealso{
\code{\link{\%<-\%}}
}

