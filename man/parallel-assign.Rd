% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assign-op.R
\name{\%<-\%}
\alias{\%<-\%}
\title{Parallel, Multiple, and Unpacking Assignment}
\usage{
x \%<-\% value
}
\arguments{
\item{x}{A bare name or name structure.}

\item{value}{A list of values to assign.}
}
\value{
\code{\%<-\%} invisibly returns \code{value}.
}
\description{
The \code{\%<-\%} operator performs parallel assignment by coercing the LHS
of an assignment expression to a name structure and assigning values from the
RHS to those names.
}
\examples{
x: y \%<-\% list(0, 1)
x  # 0
y  # 1

{z: w} \%<-\% list(2, 3)
z  # 2
w  # 3

# tackle a heavily nested list ...
fibs \%<-\% list(0, list(1, list(1, list(2, list(3)))))

# ... with an equally heavily nested
# name structure
{f0: {f1: {f2: {f3: {f4}}}}} \%<-\% fibs

f1  # 1
f3  # 2
f4  # note that f4 is list(3)

# unpack only the first element
f0: fcdr \%<-\% fibs

f0    # 0
fcdr  # list(1, list(1, list(2, list(3))))

# unpack first name, skip middle initial,
# get last name
first: ..: last \%<-\% list('Ursula', 'K', 'Le Guin')

first  # "Ursula"
last   # "Le Guin"

exists('..', inherits = FALSE)  # FALSE

a: b \%<-\% list('A', 'B')
a  # "A"
b  # "B"

# swap the values
a: b \%<-\% list(b, a)
a  # "B"
b  # "A"

guests \%<-\% c('Nathan,Allison,Matt,Polly', 'Smith,Peterson,Williams,Jones')

firsts: lasts \%<-\% strsplit(guests, ',')

firsts  # "Nathan", "Allison", ..
lasts   # "Smith", "Peterson", ..

}
\seealso{
\code{\link{unpack}}, \code{\link{items}}, \code{\link{enumerate}}
}

